/*
 * This file is generated by jOOQ.
 */
package io.github.thomoncik.resumebuilder.jooq.tables.records;


import io.github.thomoncik.resumebuilder.jooq.tables.Role;

import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RoleRecord extends UpdatableRecordImpl<RoleRecord> implements Record2<UUID, com.github.thomoncik.resumebuilder.model.Role> {

    private static final long serialVersionUID = -1586053338;

    /**
     * Setter for <code>RESUME_BUILDER.ROLE.ID</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>RESUME_BUILDER.ROLE.ID</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>RESUME_BUILDER.ROLE.NAME</code>.
     */
    public void setName(com.github.thomoncik.resumebuilder.model.Role value) {
        set(1, value);
    }

    /**
     * Getter for <code>RESUME_BUILDER.ROLE.NAME</code>.
     */
    public com.github.thomoncik.resumebuilder.model.Role getName() {
        return (com.github.thomoncik.resumebuilder.model.Role) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<UUID, com.github.thomoncik.resumebuilder.model.Role> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<UUID, com.github.thomoncik.resumebuilder.model.Role> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Role.ROLE.ID;
    }

    @Override
    public Field<com.github.thomoncik.resumebuilder.model.Role> field2() {
        return Role.ROLE.NAME;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public com.github.thomoncik.resumebuilder.model.Role component2() {
        return getName();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public com.github.thomoncik.resumebuilder.model.Role value2() {
        return getName();
    }

    @Override
    public RoleRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public RoleRecord value2(com.github.thomoncik.resumebuilder.model.Role value) {
        setName(value);
        return this;
    }

    @Override
    public RoleRecord values(UUID value1, com.github.thomoncik.resumebuilder.model.Role value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RoleRecord
     */
    public RoleRecord() {
        super(Role.ROLE);
    }

    /**
     * Create a detached, initialised RoleRecord
     */
    public RoleRecord(UUID id, com.github.thomoncik.resumebuilder.model.Role name) {
        super(Role.ROLE);

        set(0, id);
        set(1, name);
    }
}
